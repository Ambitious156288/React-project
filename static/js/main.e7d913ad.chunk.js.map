{"version":3,"sources":["assets/icons/link.svg","assets/icons/magnifier.svg","assets/icons/bulb.svg","assets/icons/logout.svg","assets/icons/twitter.svg","assets/icons/pen.svg","assets/icons/plus.svg","reducers/index.js","store/index.js","theme/GlobalStyle.js","theme/mainTheme.js","context/index.js","templates/MainTemplate.js","components/atoms/Paragraph/Paragraph.js","components/atoms/Heading/Heading.js","components/atoms/Button/Button.js","hoc/withContext.js","components/molecules/Card/Card.js","actions/index.js","components/atoms/Input/Input.js","components/atoms/ButtonIcon/ButtonIcon.js","components/organisms/Sidebar/Sidebar.js","templates/UserPageTemplate.js","components/organisms/NewItemBar/NewItemBar.js","templates/GridTemplate.js","views/Notes.js","views/Articles.js","views/Twitters.js","routes/index.js","templates/DetailsTemplate.js","views/DetailsPage.js","views/LoginPage.js","views/Root.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","twitters","id","title","content","created","twitterName","articles","articleUrl","notes","rootReducer","state","arguments","length","undefined","action","type","Object","objectSpread","defineProperty","payload","itemType","concat","toConsumableArray","item","filter","store","createStore","notesApp","window","__REDUX_DEVTOOLS_EXTENSION__","GlobalStyle","createGlobalStyle","_templateObject","theme","grey100","grey200","grey300","black","light","bold","fontSize","xxs","xs","s","m","l","xl","PageContext","React","createContext","MainTemplate","pageType","setCurrentPage","prevState","pathname","_this","props","location","_pageTypes$filter","page","includes","currentPage","slicedToArray","setState","this","prevProps","children","react_default","a","createElement","src_context","Provider","value","theme_GlobalStyle","styled_components_browser_esm","Component","withRouter","Paragraph","styled","Paragraph_templateObject","_ref","_ref2","regular","Heading","h1","Heading_templateObject","big","Button","button","Button_templateObject","activeColor","secondary","css","_templateObject2","withContext","Consumer","context","assign","pageContext","StyledWrapper","div","Card_templateObject","InnerWrapper","Card_templateObject2","flex","_templateObject3","DateInfo","_templateObject4","_ref3","_ref4","StyledHeading","_templateObject5","StyledAvatar","img","_templateObject6","_ref5","StyledLinkButton","_templateObject7","LinkIcon","Card","redirect","handleCardClick","_this$props","cardType","removeItem","react_router","to","onClick","src","href","Paragraph_Paragraph","Button_Button","defaultProps","connect","dispatch","removeItemAction","Input","input","Input_templateObject","search","Input_templateObject2","_ref6","magnifierIcon","ButtonIcon","ButtonIcon_templateObject","icon","active","Sidebar_templateObject","note","Words","Sidebar_templateObject2","NewWords","Sidebar_templateObject3","Sidebar","Sidebar_StyledWrapper","ButtonIcon_ButtonIcon","exact","as","NavLink","penIcon","activeClassName","twitterIcon","bulbIcon","logoutIcon","UserPageTemplate","Fragment","organisms_Sidebar_Sidebar","NewItemBar_templateObject","isVisible","StyledForm","Form","NewItemBar_templateObject2","StyledTextArea","NewItemBar_templateObject3","StyledInput","NewItemBar_templateObject4","NewItemBar","addItem","handleClose","NewItemBar_StyledWrapper","activecolor","Heading_Heading","formik_esm","initialValues","onSubmit","values","handleChange","handleBlur","name","placeholder","onChange","onBlur","itemContent","Math","random","toString","substr","addItemAction","GridTemplate_templateObject","StyledGrid","GridTemplate_templateObject2","StyledPageHeader","GridTemplate_templateObject3","GridTemplate_templateObject4","StyledParagraph","GridTemplate_templateObject5","StyledButtonIcon","GridTemplate_templateObject6","GridTemplate","isNewItemBarVisible","toggleNewItemBar","templates_UserPageTemplate","GridTemplate_StyledWrapper","Input_Input","GridTemplate_StyledHeading","plusIcon","organisms_NewItemBar_NewItemBar","Notes","templates_GridTemplate","map","molecules_Card_Card","key","Articles","Twitters","routes","DetailsTemplate_templateObject","DetailsTemplate_templateObject2","DetailsTemplate_templateObject3","DetailsTemplate_templateObject4","StyledLink","DetailsTemplate_templateObject5","StyledImage","DetailsTemplate_templateObject6","DetailsTemplate","DetailsTemplate_StyledWrapper","DetailsTemplate_StyledPageHeader","DetailsTemplate_StyledHeading","DetailsTemplate_StyledParagraph","alt","Link","match","path","console","log","dummyArticle","templates_DetailsTemplate","LoginPage","username","password","axios","post","then","catch","err","Root","es","react_router_dom","basename","templates_MainTemplate","extact","component","render","DetailsPage","ReactDOM","views_Root","document","getElementById"],"mappings":"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","file":"static/js/main.e7d913ad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/link.6fc1d8fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/magnifier.a14461b8.svg\";","module.exports = __webpack_public_path__ + \"static/media/bulb.af737b55.svg\";","module.exports = __webpack_public_path__ + \"static/media/logout.0969c92b.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.051af8ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/pen.84b70f8a.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.e43ce6c8.svg\";","const initialState = {\r\n  twitters: [\r\n    {\r\n      id: 1,\r\n      title: 'React',\r\n      content:\r\n        'Lorem ipsum dolor sit amet consectetur adipisicing elit. Delectus, tempora quibusdam natus modi tempore esse adipisci, dolore odit animiDelDelectus, tempora quibusdam natus modi tempore esse adipisci, dolore odit animiDelectus, tempora quibusdam natus modi tempore esse adipisci, dolore odit animiectus, tempora quibusdam natus modi tempore esse adipisci, dolore odit animi',\r\n      created: '1 day ago',\r\n      twitterName: 'reactjs',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Redux',\r\n      content: 'Lorem ipsum dolor sit amet consectetur adipisicing elit.  animi',\r\n      created: '3 days ago',\r\n      twitterName: 'dan_abramov',\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'React router',\r\n      content: ' Delectus, tempora quibusdam natus modi tempore esse adipisci, dolore odit animi',\r\n      created: '5 days ago',\r\n      twitterName: 'mjackson',\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'React training',\r\n      content:\r\n        'Lorem ipsum dolor sit amet consectetur adipisicing elit. Delectus, tempora quibusdam natus modi tempore esse adipisci, dolore odit animi',\r\n      created: '10 days ago',\r\n      twitterName: 'RyanFlorence',\r\n    },\r\n  ],\r\n  articles: [\r\n    {\r\n      id: 1,\r\n      title: 'Hello',\r\n      content:\r\n        'Lorem ipsum dolor sit amet consectetur adipisicing elit. Delectus, tempora quibusdam natus modi tempore esse adipisci, dolore odit animi',\r\n      created: '2 days ago',\r\n      articleUrl: 'https://medium.com/search?q=programming',\r\n    },\r\n  ],\r\n  notes: [\r\n    {\r\n      id: 1,\r\n      title: 'Lorem ipsum',\r\n      content:\r\n        'Lorem ipsum dolor sit amet consectetur adipisicing elit. Delectus, tempora quibusdam natus modi tempore esse adipisci, dolore odit animi',\r\n      created: '1 day ago',\r\n    },\r\n  ],\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_ITEM':\r\n      return {\r\n        ...state,\r\n        [action.payload.itemType]: [...state[action.payload.itemType], action.payload.item],\r\n      };\r\n\r\n    case 'REMOVE_ITEM':\r\n      return {\r\n        ...state,\r\n        [action.payload.itemType]: [\r\n          ...state[action.payload.itemType].filter(item => item.id !== action.payload.id),\r\n        ],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n","import { createStore } from 'redux';\r\nimport notesApp from 'reducers';\r\n\r\n/* eslint-disable no-underscore-dangle */\r\nconst store = createStore(\r\n  notesApp /* preloadedState, */,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n);\r\n/* eslint-enable */\r\n\r\nexport default store;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    @import url('https://fonts.googleapis.com/css?family=Montserrat:300,600&display=swap');\r\n\r\n    *, *::before, *::after{\r\n        box-sizing: border-box;\r\n        -webkit-font-smoothing: antialiased;\r\n        -moz-osx-font-smoothing: grayscale;\r\n    }\r\n\r\n    html{\r\n        font-size: 62.5%;\r\n    }\r\n\r\n    body{\r\n        padding-left: 190px;\r\n        font-size: 1.6rem;\r\n        font-family: 'Montserrat', sans-serif;\r\n    }\r\n\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","export const theme = {\r\n  notes: 'hsl(57, 90%, 48%)',\r\n  twitters: 'hsl(191, 70%, 56%)',\r\n  articles: ' hsl(120, 53%, 43%)',\r\n\r\n  grey100: 'hsl(0, 0%, 98%)',\r\n  grey200: 'hsl(0, 0%, 90%)',\r\n  grey300: 'hsl(0, 0%, 70%)',\r\n  black: 'black',\r\n\r\n  light: 300,\r\n  bold: 600,\r\n\r\n  fontSize: {\r\n    xxs: '1rem',\r\n    xs: '1.2rem',\r\n    s: '1.6rem',\r\n    m: '2.1rem',\r\n    l: '2.4rem',\r\n    xl: '4rem',\r\n  },\r\n};\r\n","import React from 'react';\r\n\r\nconst PageContext = React.createContext('notes');\r\n\r\nexport default PageContext;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { withRouter } from 'react-router';\r\nimport GlobalStyle from 'theme/GlobalStyle';\r\nimport { theme } from 'theme/mainTheme';\r\nimport PageContext from 'context';\r\n\r\nclass MainTemplate extends Component {\r\n  state = {\r\n    pageType: 'notes',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setCurrentPage();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    this.setCurrentPage(prevState);\r\n  }\r\n\r\n  setCurrentPage = (prevState = '') => {\r\n    const pageTypes = ['twitters', 'articles', 'notes'];\r\n    const {\r\n      location: { pathname },\r\n    } = this.props;\r\n\r\n    const [currentPage] = pageTypes.filter(page => pathname.includes(page));\r\n\r\n    if (prevState.pageType !== currentPage) this.setState({ pageType: currentPage });\r\n  };\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    const { pageType } = this.state;\r\n    return (\r\n      <PageContext.Provider value={pageType}>\r\n        <div>\r\n          <GlobalStyle />\r\n          <ThemeProvider theme={theme}>{children}</ThemeProvider>\r\n        </div>\r\n      </PageContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nMainTemplate.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  location: PropTypes.shape({\r\n    pathname: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default withRouter(MainTemplate);\r\n","import styled from 'styled-components';\r\n\r\nconst Paragraph = styled.p`\r\n  font-size: ${({ theme }) => theme.fontSize.s};\r\n  font-weight: ${({ theme }) => theme.regular};\r\n`;\r\n\r\nexport default Paragraph;\r\n","import styled from 'styled-components';\r\n\r\nconst Heading = styled.h1`\r\n  font-size: ${({ theme, big }) => (big ? theme.fontSize.xl : theme.fontSize.l)};\r\n  font-weight: ${({ theme }) => theme.bold};\r\n`;\r\n\r\nexport default Heading;\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: black;\r\n  text-decoration: none;\r\n  padding: 0;\r\n  background-color: ${({ activeColor, theme }) => theme[activeColor]};\r\n  width: 200px;\r\n  height: 50px;\r\n  border: none;\r\n  border-radius: 50px;\r\n  font-family: 'Montserrat';\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  text-transform: uppercase;\r\n\r\n  ${({ secondary }) =>\r\n    secondary &&\r\n    css`\r\n      background-color: gray;\r\n      width: 100px;\r\n      height: 30px;\r\n      font-size: 10px;\r\n    `}\r\n`;\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport PageContext from 'context';\r\n\r\nconst withContext = Component => {\r\n  return function contextComponent(props) {\r\n    return (\r\n      <PageContext.Consumer>\r\n        {context => <Component {...props} pageContext={context} />}\r\n      </PageContext.Consumer>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withContext;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled, { css } from 'styled-components';\r\nimport Paragraph from 'components/atoms/Paragraph/Paragraph';\r\nimport Heading from 'components/atoms/Heading/Heading';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport LinkIcon from 'assets/icons/link.svg';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { removeItem as removeItemAction } from 'actions';\r\nimport withContext from 'hoc/withContext';\r\n\r\nconst StyledWrapper = styled.div`\r\n  min-height: 380px;\r\n  box-shadow: 0 10px 30px -10px hsla(0, 0%, 0%, 0.1);\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  position: relative;\r\n  display: grid;\r\n  grid-template-rows: 0.25fr 1fr;\r\n`;\r\n\r\nconst InnerWrapper = styled.div`\r\n  position: relative;\r\n  padding: 17px 30px;\r\n  background-color: ${({ activeColor, theme }) => (activeColor ? theme[activeColor] : 'white')};\r\n\r\n  :first-of-type {\r\n    z-index: 100;\r\n  }\r\n\r\n  ${({ flex }) =>\r\n    flex &&\r\n    css`\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n    `}\r\n`;\r\n\r\nconst DateInfo = styled(Paragraph)`\r\n  margin: 0 0 5px;\r\n  font-weight: ${({ theme }) => theme.bold};\r\n  font-size: ${({ theme }) => theme.fontSize.xs};\r\n`;\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  margin: 5px 0 0;\r\n`;\r\n\r\nconst StyledAvatar = styled.img`\r\n  position: absolute;\r\n  width: 90px;\r\n  height: 90px;\r\n  border: 4px solid ${({ theme }) => theme.twitters};\r\n  border-radius: 50%;\r\n  right: 40px;\r\n  top: 15px;\r\n`;\r\n\r\nconst StyledLinkButton = styled.a`\r\n  position: absolute;\r\n  display: block;\r\n  width: 65px;\r\n  height: 65px;\r\n  border-radius: 50%;\r\n  background-color: white;\r\n  background: white url(${LinkIcon}) no-repeat;\r\n  background-size: 65%;\r\n  background-position: 50%;\r\n  top: 50%;\r\n  right: 15px;\r\n  transform: translateY(-50%);\r\n`;\r\n\r\nclass Card extends Component {\r\n  state = {\r\n    redirect: false,\r\n  };\r\n\r\n  handleCardClick = () => this.setState({ redirect: true });\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      cardType,\r\n      title,\r\n      created,\r\n      twitterName,\r\n      articleUrl,\r\n      content,\r\n      removeItem,\r\n    } = this.props;\r\n    const { redirect } = this.state;\r\n\r\n    if (redirect) {\r\n      return <Redirect to={`${cardType}/${id}`} />;\r\n    }\r\n    return (\r\n      <StyledWrapper onClick={this.handleCardClick}>\r\n        <InnerWrapper activeColor={cardType}>\r\n          <StyledHeading>{title}</StyledHeading>\r\n          <DateInfo>{created}</DateInfo>\r\n          {cardType === 'twitters' && (\r\n            <StyledAvatar src={`https://avatars.io/twitter/${twitterName}`} />\r\n          )}\r\n          {cardType === 'articles' && <StyledLinkButton href={articleUrl} />}\r\n        </InnerWrapper>\r\n        <InnerWrapper flex>\r\n          <Paragraph>{content}</Paragraph>\r\n          <Button onClick={() => removeItem(cardType, id)} secondary>\r\n            REMOVE\r\n          </Button>\r\n        </InnerWrapper>\r\n      </StyledWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nCard.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  cardType: PropTypes.oneOf(['notes', 'twitters', 'articles']),\r\n  title: PropTypes.string.isRequired,\r\n  created: PropTypes.string.isRequired,\r\n  twitterName: PropTypes.string,\r\n  articleUrl: PropTypes.string,\r\n  content: PropTypes.string.isRequired,\r\n  removeItem: PropTypes.func.isRequired,\r\n};\r\n\r\nCard.defaultProps = {\r\n  cardType: 'notes',\r\n  twitterName: null,\r\n  articleUrl: null,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  removeItem: (itemType, id) => dispatch(removeItemAction(itemType, id)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(withContext(Card));\r\n","export const removeItem = (itemType, id) => {\r\n  return {\r\n    type: 'REMOVE_ITEM',\r\n    payload: {\r\n      itemType,\r\n      id,\r\n    },\r\n  };\r\n};\r\n\r\nexport const addItem = (itemType, itemContent) => {\r\n  const getId = () =>\r\n    `_${Math.random()\r\n      .toString(36)\r\n      .substr(2, 9)}`;\r\n\r\n  return {\r\n    type: 'ADD_ITEM',\r\n    payload: {\r\n      itemType,\r\n      item: {\r\n        id: getId(),\r\n        ...itemContent,\r\n      },\r\n    },\r\n  };\r\n};\r\n","import styled, { css } from 'styled-components';\r\nimport magnifierIcon from 'assets/icons/magnifier.svg';\r\n\r\nconst Input = styled.input`\r\n  padding: 15px 30px;\r\n  font-size: ${({ theme }) => theme.fontSize.s};\r\n  font-weight: ${({ theme }) => theme.regular};\r\n  background-color: ${({ theme }) => theme.grey200};\r\n  border: none;\r\n  border-radius: 50px;\r\n\r\n  ::placeholder {\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    color: ${({ theme }) => theme.grey300};\r\n  }\r\n\r\n  ${({ search }) =>\r\n    search &&\r\n    css`\r\n      padding: 10px 20px 10px 50px;\r\n      font-size: ${({ theme }) => theme.fontSize.xs};\r\n      background-image: url(${() => magnifierIcon});\r\n      background-size: 15px;\r\n      background-position: 20px 50%;\r\n      background-repeat: no-repeat;\r\n    `}\r\n`;\r\n\r\nexport default Input;\r\n","import styled from 'styled-components';\r\n\r\nconst ButtonIcon = styled.button`\r\n  display: block;\r\n  width: 70px;\r\n  height: 70px;\r\n  border-radius: 20px;\r\n  background-image: url(${({ icon }) => icon});\r\n  background-repeat: no-repeat;\r\n  background-position: 50% 50%;\r\n  border: none;\r\n  margin-bottom: 10px;\r\n  background-color: ${({ active }) => (active ? 'white' : 'transparent')};\r\n\r\n  &.active {\r\n    background-color: white;\r\n  }\r\n`;\r\n\r\nexport default ButtonIcon;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\r\nimport bulbIcon from 'assets/icons/bulb.svg';\r\nimport logoutIcon from 'assets/icons/logout.svg';\r\nimport twitterIcon from 'assets/icons/twitter.svg';\r\nimport penIcon from 'assets/icons/pen.svg';\r\nimport PropTypes from 'prop-types';\r\nimport withContext from 'hoc/withContext';\r\n\r\nconst StyledWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 190px;\r\n  height: 100vh;\r\n  background-color: ${({ theme, activeColor }) => (activeColor ? theme[activeColor] : theme.note)};\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n`;\r\n\r\nconst Words = styled.p`\r\n  font-size: ${({ theme }) => theme.fontSize.l};\r\n  font-weight: ${({ theme }) => theme.bold};\r\n  transform: rotate(25deg);\r\n  letter-spacing: 2px;\r\n  margin-top: 20px;\r\n  margin-left: 0;\r\n  text-decoration: underline;\r\n`;\r\n\r\nconst NewWords = styled(Words)`\r\n  transform: rotate(-10deg);\r\n  margin-left: 50px;\r\n`;\r\n\r\nconst Sidebar = ({ pageContext }) => (\r\n  <StyledWrapper activeColor={pageContext}>\r\n    <div>\r\n      <NewWords>RELIEVE THE </NewWords>\r\n      <Words>BOREDOM !!!</Words>\r\n    </div>\r\n\r\n    <div>\r\n      <ButtonIcon exact as={NavLink} to=\"/notes\" icon={penIcon} activeClassName=\"active\" />\r\n      <ButtonIcon as={NavLink} to=\"/twitters\" icon={twitterIcon} activeClassName=\"active\" />\r\n      <ButtonIcon as={NavLink} to=\"/articles\" icon={bulbIcon} activeClassName=\"active\" />\r\n    </div>\r\n\r\n    <ButtonIcon as={NavLink} to=\"/login\" icon={logoutIcon} />\r\n  </StyledWrapper>\r\n);\r\n\r\nSidebar.propTypes = {\r\n  pageContext: PropTypes.oneOf(['notes', 'twitters', 'articles']),\r\n};\r\n\r\nSidebar.defaultProps = {\r\n  pageContext: 'notes',\r\n};\r\n\r\nexport default withContext(Sidebar);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Sidebar from 'components/organisms/Sidebar/Sidebar';\r\n\r\nconst UserPageTemplate = ({ children }) => (\r\n  <>\r\n    <Sidebar />\r\n    {children}\r\n  </>\r\n);\r\n\r\nUserPageTemplate.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.node]).isRequired,\r\n};\r\n\r\nexport default UserPageTemplate;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Input from 'components/atoms/Input/Input';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport withContext from 'hoc/withContext';\r\nimport Heading from 'components/atoms/Heading/Heading';\r\nimport { connect } from 'react-redux';\r\nimport { addItem as addItemAction } from 'actions';\r\nimport { Formik, Form } from 'formik';\r\n\r\nconst StyledWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  padding: 100px 50px;\r\n  height: 100vh;\r\n  width: 680px;\r\n  background-color: white;\r\n  border-left: 5px solid ${({ theme, activeColor }) => theme[activeColor]};\r\n  z-index: 100;\r\n  transform: translate(${({ isVisible }) => (isVisible ? '0' : '100%')});\r\n  transition: transform 0.2s;\r\n`;\r\n\r\nconst StyledForm = styled(Form)`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst StyledTextArea = styled(Input)`\r\n  height: 30vh;\r\n  border-radius: 20px;\r\n  margin: 30px 0 100px;\r\n`;\r\n\r\nconst StyledInput = styled(Input)`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst NewItemBar = ({ pageContext, isVisible, addItem, handleClose }) => (\r\n  <StyledWrapper isVisible={isVisible} activecolor={pageContext}>\r\n    <Heading big>Create new {pageContext}</Heading>\r\n    <Formik\r\n      initialValues={{ title: '', content: '', articleUrl: '', twitterName: '', created: '' }}\r\n      onSubmit={values => {\r\n        addItem(pageContext, values);\r\n        handleClose();\r\n      }}\r\n    >\r\n      {({ values, handleChange, handleBlur }) => (\r\n        <StyledForm>\r\n          <StyledInput\r\n            type=\"text\"\r\n            name=\"title\"\r\n            placeholder=\"title\"\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            value={values.title}\r\n          />\r\n          {pageContext === 'twitters' && (\r\n            <StyledInput\r\n              placeholder=\"twitter name eg. hello_roman\"\r\n              type=\"text\"\r\n              name=\"twitterName\"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.twitterName}\r\n            />\r\n          )}\r\n          {pageContext === 'articles' && (\r\n            <StyledInput\r\n              placeholder=\"link\"\r\n              type=\"text\"\r\n              name=\"articleUrl\"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.articleUrl}\r\n            />\r\n          )}\r\n          <StyledTextArea\r\n            name=\"content\"\r\n            as=\"textarea\"\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            value={values.content}\r\n          />\r\n          <Button type=\"submit\" activeColor={pageContext}>\r\n            Add Note\r\n          </Button>\r\n        </StyledForm>\r\n      )}\r\n    </Formik>\r\n  </StyledWrapper>\r\n);\r\n\r\nNewItemBar.propTypes = {\r\n  pageContext: PropTypes.oneOf(['notes', 'twitters', 'articles']),\r\n  isVisible: PropTypes.bool,\r\n  addItem: PropTypes.func.isRequired,\r\n  handleClose: PropTypes.func.isRequired,\r\n};\r\n\r\nNewItemBar.defaultProps = {\r\n  pageContext: 'notes',\r\n  isVisible: false,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addItem: (itemType, itemContent) => dispatch(addItemAction(itemType, itemContent)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(withContext(NewItemBar));\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Input from 'components/atoms/Input/Input';\r\nimport Heading from 'components/atoms/Heading/Heading';\r\nimport Paragraph from 'components/atoms/Paragraph/Paragraph';\r\nimport UserPageTemplate from 'templates/UserPageTemplate';\r\nimport withContext from 'hoc/withContext';\r\nimport plusIcon from 'assets/icons/plus.svg';\r\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\r\nimport NewItemBar from 'components/organisms/NewItemBar/NewItemBar';\r\n\r\nconst StyledWrapper = styled.div`\r\n  position: relative;\r\n  padding: 25px 150px 25px 80px;\r\n`;\r\n\r\nconst StyledGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-gap: 80px;\r\n\r\n  @media (max-width: 1500px) {\r\n    grid-gap: 45px;\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n\r\n  @media (max-width: 1100px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nconst StyledPageHeader = styled.div`\r\n  margin: 25px 0 50px 0;\r\n`;\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  margin: 0;\r\n  text-transform: capitalize;\r\n`;\r\n\r\nconst StyledParagraph = styled(Paragraph)`\r\n  margin: 0;\r\n  font-weight: ${({ theme }) => theme.bold};\r\n`;\r\n\r\nconst StyledButtonIcon = styled(ButtonIcon)`\r\n  position: fixed;\r\n  right: 30px;\r\n  bottom: 30px;\r\n  background-color: ${({ activeColor, theme }) => theme[activeColor]};\r\n  border-radius: 50%;\r\n  background-size: 30%;\r\n  z-index: 1000;\r\n`;\r\n\r\nclass GridTemplate extends Component {\r\n  state = {\r\n    isNewItemBarVisible: false,\r\n  };\r\n\r\n  toggleNewItemBar = () => {\r\n    this.setState(prevState => ({ isNewItemBarVisible: !prevState.isNewItemBarVisible }));\r\n  };\r\n\r\n  render() {\r\n    const { children, pageContext } = this.props;\r\n    const { isNewItemBarVisible } = this.state;\r\n\r\n    return (\r\n      <UserPageTemplate>\r\n        <StyledWrapper>\r\n          <StyledPageHeader>\r\n            <Input search placeholder=\"Search\" />\r\n            <StyledHeading big as=\"h1\">\r\n              {pageContext}\r\n            </StyledHeading>\r\n            <StyledParagraph>6 {pageContext}</StyledParagraph>\r\n          </StyledPageHeader>\r\n          <StyledGrid>{children}</StyledGrid>\r\n          <StyledButtonIcon\r\n            onClick={this.toggleNewItemBar}\r\n            icon={plusIcon}\r\n            activeColor={pageContext}\r\n          />\r\n          <NewItemBar handleClose={this.toggleNewItemBar} isVisible={isNewItemBarVisible} />\r\n        </StyledWrapper>\r\n      </UserPageTemplate>\r\n    );\r\n  }\r\n}\r\n\r\nGridTemplate.propTypes = {\r\n  children: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  pageContext: PropTypes.oneOf(['notes', 'twitters', 'articles']),\r\n};\r\n\r\nGridTemplate.defaultProps = {\r\n  pageContext: 'notes',\r\n};\r\n\r\nexport default withContext(GridTemplate);\r\n","import React from 'react';\r\nimport Card from 'components/molecules/Card/Card';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport GridTemplate from '../templates/GridTemplate';\r\n\r\nconst Notes = ({ notes }) => (\r\n  <GridTemplate>\r\n    {notes.map(({ title, content, created, id }) => (\r\n      <Card id={id} cardType=\"notes\" title={title} content={content} created={created} key={id} />\r\n    ))}\r\n  </GridTemplate>\r\n);\r\n\r\nNotes.propTypes = {\r\n  notes: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      cardType: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n      created: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nNotes.defaultProps = {\r\n  notes: [],\r\n};\r\n\r\nconst mapStateToProps = ({ notes }) => ({ notes });\r\n\r\nexport default connect(mapStateToProps)(Notes);\r\n","import React from 'react';\r\nimport GridTemplate from 'templates/GridTemplate';\r\nimport PropTypes from 'prop-types';\r\nimport Card from 'components/molecules/Card/Card';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Articles = ({ articles }) => (\r\n  <GridTemplate>\r\n    {articles.map(({ id, title, content, articleUrl, created }) => (\r\n      <Card\r\n        id={id}\r\n        cardType=\"articles\"\r\n        title={title}\r\n        content={content}\r\n        articleUrl={articleUrl}\r\n        created={created}\r\n        key={id}\r\n      />\r\n    ))}\r\n  </GridTemplate>\r\n);\r\n\r\nArticles.propTypes = {\r\n  articles: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      cardType: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n      articleUrl: PropTypes.string.isRequired,\r\n      created: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nArticles.defaultProps = {\r\n  articles: [],\r\n};\r\n\r\nconst mapStateToProps = ({ articles }) => ({ articles });\r\n\r\nexport default connect(mapStateToProps)(Articles);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport GridTemplate from 'templates/GridTemplate';\r\nimport { connect } from 'react-redux';\r\nimport Card from 'components/molecules/Card/Card';\r\n\r\nconst Twitters = ({ twitters }) => (\r\n  <GridTemplate>\r\n    {twitters.map(({ title, content, twitterName, created, id }) => (\r\n      <Card\r\n        id={id}\r\n        cardType=\"twitters\"\r\n        title={title}\r\n        content={content}\r\n        twitterName={twitterName}\r\n        created={created}\r\n        key={id}\r\n      />\r\n    ))}\r\n  </GridTemplate>\r\n);\r\n\r\nTwitters.propTypes = {\r\n  twitters: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      cardType: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n      twitterName: PropTypes.string.isRequired,\r\n      created: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nTwitters.defaultProps = {\r\n  twitters: [],\r\n};\r\n\r\nconst mapStateToProps = ({ twitters }) => ({ twitters });\r\n\r\nexport default connect(mapStateToProps)(Twitters);\r\n","export const routes = {\r\n  home: '/',\r\n  notes: '/notes',\r\n  note: '/notes/:id',\r\n  twitters: '/twitters',\r\n  twitter: '/twitters/:id',\r\n  articles: '/articles',\r\n  article: '/articles/:id',\r\n  login: '/login',\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport UserPageTemplate from 'templates/UserPageTemplate';\r\nimport Heading from 'components/atoms/Heading/Heading';\r\nimport Paragraph from 'components/atoms/Paragraph/Paragraph';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport withContext from 'hoc/withContext';\r\n\r\nconst StyledWrapper = styled.div`\r\n  padding: 25px 150px 25px 70px;\r\n  max-width: 50vw;\r\n  position: relative;\r\n\r\n  @media (max-width: 1200px) {\r\n    max-width: 80vw;\r\n  }\r\n`;\r\n\r\nconst StyledPageHeader = styled.div`\r\n  margin: 25px 0 50px 0;\r\n`;\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  margin: 25px 0 0 0;\r\n\r\n  ::first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\n\r\nconst StyledParagraph = styled(Paragraph)`\r\n  margin: 0;\r\n  font-weight: ${({ theme }) => theme.bold};\r\n`;\r\n\r\nconst StyledLink = styled.a`\r\n  display: block;\r\n  font-weight: ${({ theme }) => theme.bold};\r\n  font-size: ${({ theme }) => theme.fontSize.xs};\r\n  color: black;\r\n  text-transform: uppercase;\r\n  margin: 20px 0 50px;\r\n`;\r\n\r\nconst StyledImage = styled.img`\r\n  position: absolute;\r\n  right: -80px;\r\n  top: 50px;\r\n  width: 120px;\r\n  height: 120px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst DetailsTemplate = ({ pageContext, title, created, content, articleUrl, twitterName }) => (\r\n  <UserPageTemplate pageContext={pageContext}>\r\n    <StyledWrapper>\r\n      <StyledPageHeader>\r\n        <StyledHeading big as=\"h1\">\r\n          {title}\r\n        </StyledHeading>\r\n        <StyledParagraph>{created}</StyledParagraph>\r\n      </StyledPageHeader>\r\n      <Paragraph>{content}</Paragraph>\r\n      {pageContext === 'articles' && <StyledLink href={articleUrl}>Open article</StyledLink>}\r\n      {pageContext === 'twitters' && (\r\n        <StyledImage alt={title} src={`https://avatars.io/twitter/${twitterName}`} />\r\n      )}\r\n      <Button as={Link} to={`/${pageContext}`} activeColor={pageContext}>\r\n        save / close\r\n      </Button>\r\n    </StyledWrapper>\r\n  </UserPageTemplate>\r\n);\r\n\r\nDetailsTemplate.propTypes = {\r\n  pageContext: PropTypes.string.isRequired,\r\n  title: PropTypes.string,\r\n  created: PropTypes.string,\r\n  content: PropTypes.string,\r\n  articleUrl: PropTypes.string,\r\n  twitterName: PropTypes.string,\r\n};\r\n\r\nDetailsTemplate.defaultProps = {\r\n  title: '',\r\n  created: '',\r\n  content: '',\r\n  articleUrl: '',\r\n  twitterName: '',\r\n};\r\n\r\nexport default withContext(DetailsTemplate);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport DetailsTemplate from 'templates/DetailsTemplate';\r\nimport { routes } from 'routes';\r\n\r\nimport withContext from 'hoc/withContext';\r\n// import { connect } from 'react-redux';\r\n\r\nclass DetailsPage extends Component {\r\n  state = {\r\n    pageType: 'notes',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { match } = this.props;\r\n\r\n    switch (match.path) {\r\n      case routes.twitter:\r\n        this.setState({ pageType: 'twitters' });\r\n        break;\r\n      case routes.note:\r\n        this.setState({ pageType: 'notes' });\r\n        break;\r\n      case routes.article:\r\n        this.setState({ pageType: 'articles' });\r\n        break;\r\n      default:\r\n        console.log('Something went wrong with matching paths');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const dummyArticle = {\r\n      id: 1,\r\n      title: 'Example',\r\n      content:\r\n        'Lorem ipsum dolor sit amet consectetur adipisicing elit. Delectus, tempora quibusdam natus modi tempore esse adipisci, dolore odit animi',\r\n      twitterName: 'reactjs',\r\n      articleUrl: 'https://medium.com/search?q=programming',\r\n      created: '1 day ago',\r\n    };\r\n\r\n    const { pageType } = this.state;\r\n\r\n    return (\r\n      <DetailsTemplate\r\n        pageType={pageType}\r\n        title={dummyArticle.title}\r\n        created={dummyArticle.created}\r\n        content={dummyArticle.content}\r\n        articleUrl={dummyArticle.articleUrl}\r\n        twitterName={dummyArticle.twitterName}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nDetailsPage.propTypes = {\r\n  match: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withContext(DetailsPage);\r\n","import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport axios from 'axios';\r\n\r\nconst LoginPage = () => (\r\n  <div>\r\n    <Formik\r\n      initialValues={{ username: '', password: '' }}\r\n      onSubmit={({ username, password }) => {\r\n        axios\r\n          .post('http://localhost:9000/api/user/login', {\r\n            username,\r\n            password,\r\n          })\r\n          .then(() => console.log('Login successful'))\r\n          .catch(err => console.log(err));\r\n      }}\r\n    >\r\n      {() => (\r\n        <Form>\r\n          <Field name=\"username\" type=\"text\" />\r\n          <Field name=\"password\" type=\"password\" />\r\n          <button type=\"submit\">sign in</button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  </div>\r\n);\r\n\r\nexport default LoginPage;\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from 'store';\r\nimport MainTemplate from 'templates/MainTemplate';\r\nimport Notes from 'views/Notes';\r\nimport Articles from 'views/Articles';\r\nimport Twitters from 'views/Twitters';\r\nimport { routes } from 'routes';\r\nimport DetailsPage from 'views/DetailsPage';\r\nimport LoginPage from 'views/LoginPage';\r\n\r\nconst Root = () => (\r\n  <Provider store={store}>\r\n    <BrowserRouter basename={window.location.pathname || ''}>\r\n      <MainTemplate>\r\n        <Switch>\r\n          <Route extact path={routes.login} component={LoginPage} />\r\n          <Route exact path={routes.home} render={() => <Redirect to=\"/notes\" />} />\r\n          <Route exact path={routes.notes} component={Notes} />\r\n          <Route path={routes.note} component={DetailsPage} />\r\n          <Route exact path={routes.articles} component={Articles} />\r\n          <Route path={routes.article} component={DetailsPage} />\r\n          <Route exact path={routes.twitters} component={Twitters} />\r\n          <Route path={routes.twitter} component={DetailsPage} />\r\n        </Switch>\r\n      </MainTemplate>\r\n    </BrowserRouter>\r\n  </Provider>\r\n);\r\n\r\nexport default Root;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Root from 'views/Root';\r\n\r\nReactDOM.render(<Root />, document.getElementById('root'));\r\n"],"sourceRoot":""}